rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isRepresentative(clubId) {
      return get(/databases/$(database)/documents/clubs/$(clubId)).data.representativeId == request.auth.uid;
    }

    function isSignedIn() {
      return request.auth != null;
    }

    // USERS collection
    match /users/{userId} {
      // Anyone authenticated can read user info (needed for names, etc.)
      allow read: if isSignedIn();
      // Only the user themselves or an admin can update their own document
      allow write: if request.auth.uid == userId || isAdmin();
    }

    // CLUBS collection
    match /clubs/{clubId} {
      // Any authenticated user can read club data
      allow read: if isSignedIn();
      // Only an admin can create, update, or delete clubs directly
      // (Representatives create them via the app's logic)
      allow write: if isAdmin();
      // Allow authenticated users to create new clubs
      allow create: if isSignedIn();
    }

    // EXPENSES collection
    match /expenses/{expenseId} {
      // An expense can be read if:
      // 1. You are the one who submitted it.
      // 2. You are a representative for that expense's club.
      // 3. You are an admin.
      allow read: if (resource.data.submitterId == request.auth.uid) ||
                     isRepresentative(resource.data.clubId) ||
                     isAdmin();

      // An expense can be created by any signed-in user.
      allow create: if isSignedIn();

      // An expense can be updated if:
      // 1. You are a representative for the club (to flag it).
      // 2. You are an admin (to change status, add comments).
      allow update: if isRepresentative(request.resource.data.clubId) || isAdmin();

      // Only an admin can delete an expense record.
      allow delete: if isAdmin();
    }

    // REPRESENTATIVE REQUESTS collection
    match /representativeRequests/{requestId} {
       // A request can be read by the user who made it or an admin.
      allow read: if resource.data.userId == request.auth.uid || isAdmin();
      // Anyone can create a request for themselves.
      allow create: if request.resource.data.userId == request.auth.uid;
       // Only an admin can approve or reject a request.
      allow update: if isAdmin();
    }
  }
}