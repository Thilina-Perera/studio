
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function getRole(userId) {
        return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    function isAdmin(userId) {
        return getRole(userId) == 'admin';
    }

    // Allow read-only access to basic app data for signed-in users
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isUser(userId); // Users can update their own profile
    }

    match /clubs/{clubId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isSignedIn() && isAdmin(request.auth.uid); // Only admins can manage clubs
    }

    match /expenses/{expenseId} {
      allow read, write: if isSignedIn(); // Simplified for now, more granular rules can be added
    }

    match /representativeRequests/{requestId} {
        allow read, write: if isSignedIn();
    }
    
    match /notifications/{notificationId} {
      // Users can read their own notifications
      allow read: if isSignedIn() && isUser(resource.data.userId);
      
      // Users can create notifications for admins. Admins can create for anyone.
      allow create: if isSignedIn();
      
      // Users can only update the `isRead` status of their own notifications.
      allow update: if isUser(resource.data.userId)
                    && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isRead']);

      // Disallow deleting notifications to maintain a history
      allow delete: if false;
    }
  }
}
