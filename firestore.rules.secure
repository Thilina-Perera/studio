rules_version = '2';

function isAuth() {
  return request.auth != null;
}

function isAdmin() {
  return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
}

function isRepresentative(clubId) {
    return isAuth() && get(/databases/$(database)/documents/clubs/$(clubId)).data.representativeId == request.auth.uid;
}

function isSubmitter(userId) {
    return isAuth() && request.auth.uid == userId;
}

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      // Anyone can read user data (for names, etc.) but only the user themselves or an admin can write.
      allow read: if isAuth();
      allow write: if isSubmitter(userId) || isAdmin();
    }

    match /clubs/{clubId} {
      // Anyone authenticated can read club info.
      // Admins and the club representative can update it.
      // Any authenticated user can create a new club.
      allow read: if isAuth();
      allow create: if isAuth();
      allow update: if isAdmin() || isRepresentative(clubId);
      allow delete: if isAdmin();
    }

    match /expenses/{expenseId} {
      // Any authenticated user can create an expense.
      allow create: if isAuth();
      // Users can read/update their own expenses.
      // Representatives can read expenses for their clubs.
      // Admins can read/update all expenses.
      allow read, update: if isAdmin() || isSubmitter(resource.data.submitterId) || isRepresentative(resource.data.clubId);
      allow delete: if isAdmin();
    }

    match /representativeRequests/{requestId} {
        // Any authenticated user can create a request.
        allow create: if isAuth();
        // Only admins can view, approve, or reject requests.
        allow read, write: if isAdmin();
    }
  }
}
